[profile.default]
# update solc values if needed for compatability with older contracts
auto_detect_solc = false
solc = '0.8.20'
src = "src"
out = "out"
libs = ["lib"]
remappings = [
    'forge-std/=lib/forge-std/src',
    'solady/=lib/solady/src/',
    'solady-test/=lib/solady/test/',
    'openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/',
    'openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/',
    'uniswap-v2-core/=lib/uniswap/v2-core/contracts/',
    'uniswap-v3-core/=lib/uniswap/v3-core/contracts/',
    'uniswap-v3-periphery/=lib/uniswap/v3-periphery/contracts/',
    'uniswap-v4-core/=lib/uniswap/v4-core/src/',
    'uniswap-v4-periphery/=lib/uniswap/v4-periphery/src/'
]
# ensure that block number + timestamp are realistic when running tests
block_number = 17722462
block_timestamp = 1689711647

# don't pollute bytecode with metadata
bytecode_hash = 'none'
cbor_metadata = false
# grant access to read via_ir-out by default, if necessary
fs_permissions = [{ access = "read", path = "./via_ir-out" }]
# etherscan currently does not support contracts with more than 10 million optimizer runs;
# bytecode is typically unaffected past ~1 million runs anyway
optimizer_runs = 99_999_999

[rpc_endpoints]
sepolia = "${SEPOLIA_RPC_URL}"
mainnet = "${ETHEREUM_RPC_URL}"
base = "${BASE_RPC_URL}"
base_sepolia = "${BASE_SEPOLIA_RPC_URL}"

[etherscan]
ethereum = { key = "${ETHERSCAN_API_KEY}"}
base = { key = "${BASESCAN_API_KEY}"}
base_sepolia = { key = "${BASESCAN_API_KEY}"}

# via_ir pipeline is very slow - use a separate profile to pre-compile and then use vm.getCode to deploy
[profile.via_ir]
via_ir = true
# do not compile tests when compiling via-ir
test = 'src'
out = 'via_ir-out'

# offload bulk of fuzz runs to CI
[profile.CI.fuzz]
fuzz_runs = 1024

[profile.ffi]
ffi = true
test = 'test-ffi'
fs_permissions = [{ access = 'read-write', path = './test-ffi/' }]

# Use a very small number of default fuzz runs to speed up local testing. It is
# recommended to increase this number or use the `--fuzz-runs=256` flag to run
# a proper fuzzing campaign before yeeting your project to mainnet.
[profile.ffi.fuzz]
runs = 5

[profile.gas]
optimizer = true
optimizer_runs = 1000000
via_ir = true

# See more config options https://github.com/foundry-rs/foundry/tree/master/config
